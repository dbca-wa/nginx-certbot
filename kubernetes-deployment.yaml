apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deployment.yaml
        --volumes hostPath
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    ports:
    - name: "8000"
      port: 8000
      targetPort: 80
    - name: "8443"
      port: 8443
      targetPort: 443
    selector:
      io.kompose.service: nginx
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deployment.yaml
        --volumes hostPath
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: certbot
    name: certbot
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: certbot
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deployment.yaml
            --volumes hostPath
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: certbot
      spec:
        containers:
        - command:
          - /etc/letsencrypt/certbot-cron
          image: certbot/dns-cloudflare
          imagePullPolicy: ""
          name: certbot
          resources: {}
          volumeMounts:
          - mountPath: /etc/letsencrypt
            name: certbot-hostpath0
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - hostPath:
            path: /etc/letsencrypt
          name: certbot-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deployment.yaml
        --volumes hostPath
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: nginx
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deployment.yaml
            --volumes hostPath
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: nginx
      spec:
        containers:
        - image: ghcr.io/dbca-wa/nginx-sigsci:1.19.6
          imagePullPolicy: ""
          name: nginx
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: {}
          volumeMounts:
          - mountPath: /etc/nginx
            name: nginx-hostpath0
          - mountPath: /var/run
            name: nginx-hostpath1
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - hostPath:
            path: /etc/nginx
          name: nginx-hostpath0
        - hostPath:
            path: /var/run/nginx-sigsci
          name: nginx-hostpath1
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deployment.yaml
        --volumes hostPath
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: sigsci
    name: sigsci
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: sigsci
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deployment.yaml
            --volumes hostPath
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: sigsci
      spec:
        containers:
        - image: ghcr.io/dbca-wa/nginx-sigsci:1.19.6
          imagePullPolicy: ""
          name: sigsci
          resources: {}
          volumeMounts:
          - mountPath: /etc/sigsci
            name: sigsci-hostpath0
          - mountPath: /var/run
            name: sigsci-hostpath1
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - hostPath:
            path: /etc/sigsci
          name: sigsci-hostpath0
        - hostPath:
            path: /var/run/nginx-sigsci
          name: sigsci-hostpath1
  status: {}
kind: List
metadata: {}

